{"version":3,"file":"explain_error.min.js","sources":["../../src/render/explain_error.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Adds an \"Explain Error\" button to coderunner questions when test results indicate an error.\n * Clicking this button sends a request to explain the error through the chat.\n *\n * @module     block_sage/render/explain_error\n * @copyright  2025 Vasilevskiy Vladimir <vivasilevskiy_1@edu.hse.ru>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/ajax', 'block_sage/api/chat_api', 'block_sage/questions/request_args', 'jquery'],\n    function(Ajax, chat_api, request_args, $) {\n\n   /**\n    * Adds an \"Explain Error\" button to the coderunner test results area if the results are marked as \"bad\".\n    * @returns {void}\n    */\n   function addExplanationButton() {\n       const $testResults = $('div.coderunner-test-results');\n\n       if ($testResults.hasClass('bad')) {\n           const $button = $('<input/>', {\n               type: 'button',\n               value: 'Пояснить ошибку',\n               class: 'btn btn-secondary',\n               'data-initial-value': 'Пояснить ошибку'\n           });\n\n           $button.on('click', function() {\n               var args = request_args.getRequestWithData();\n               const request = Ajax.call([{\n                   methodname: 'block_sage_process_action_request',\n                   args: {\n                       ...args,\n                       requestType: 'ERROR_EXPLAIN'\n                   },\n               }]);\n               request[0].done(function(response) {\n                   if(!chat_api.isChatOpen()){\n                       chat_api.setChatState(true);\n                   }\n                   chat_api.addMessageToChat(response.message);\n               }).fail(function(error) {\n                   window.console.error('An error occured while sending a message: '+error.message);\n               });\n           });\n\n           $testResults.append($button);\n       }\n   }\n\n   return {\n       init: addExplanationButton\n   };\n});"],"names":["define","Ajax","chat_api","request_args","$","init","$testResults","hasClass","$button","type","value","class","on","args","getRequestWithData","call","methodname","requestType","done","response","isChatOpen","setChatState","addMessageToChat","message","fail","error","window","console","append"],"mappings":";;;;;;;;AAuBAA,yCAAO,CAAC,YAAa,0BAA2B,oCAAqC,WACjF,SAASC,KAAMC,SAAUC,aAAcC,SAwCjC,CACHC,sBAlCMC,aAAeF,EAAE,kCAEnBE,aAAaC,SAAS,OAAQ,OACxBC,QAAUJ,EAAE,WAAY,CAC1BK,KAAM,SACNC,MAAO,kBACPC,MAAO,yCACe,oBAG1BH,QAAQI,GAAG,SAAS,eACZC,KAAOV,aAAaW,qBACRb,KAAKc,KAAK,CAAC,CACvBC,WAAY,oCACZH,KAAM,IACCA,KACHI,YAAa,oBAGb,GAAGC,MAAK,SAASC,UACjBjB,SAASkB,cACTlB,SAASmB,cAAa,GAE1BnB,SAASoB,iBAAiBH,SAASI,YACpCC,MAAK,SAASC,OACbC,OAAOC,QAAQF,MAAM,6CAA6CA,MAAMF,eAIhFjB,aAAasB,OAAOpB"}