{"version":3,"file":"chat.min.js","sources":["../../src/render/chat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manages the visual representation and user interaction of the chat window, including creating, displaying,\n * and handling messages.  It also handles the chat button and context highlighting.\n *\n * @module     block_sage/render/chat\n * @copyright  2024 Vasilevskiy Vladimir <vivasilevskiy_1@edu.hse.ru>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'block_sage/api/chat_api', 'block_sage/api/selection_api'],\n    function ($, chat_api, selection_api) {\n\n    const sageChatButtonSelector = '.sage-chat-button';\n    const sageChatWindowSelector = '.sage-chat-window';\n    const sageMessageInputSelector = '.sage-message-input';\n    const sageChatLabelSelector = '.sage-chat-label';\n    let sageIcon = null;\n\n    $('<style type=\"text/css\">')\n        .html(`\n        body {\n            margin: 0;\n            padding: 0;\n            font-family: Arial, sans-serif;\n        }\n\n        .sage-chat-icon {\n            width: 50px;\n            height: 50px;\n        }\n\n        .sage-chat-button {\n            position: fixed;\n            bottom: 80px;\n            right: 0px;\n            display: flex;\n            align-items: center;\n            background-color: white;\n            border-radius: 50%;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            padding: 10px;\n            cursor: pointer;\n            transition: all 0.3s;\n            width: 70px;\n            height: 70px;\n            user-select: none;\n        }\n\n        .sage-chat-label {\n            margin-left: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n\n        .sage-chat-button.expanded {\n            border-radius: 25px;\n            width: 200px;\n        }\n\n        .sage-chat-button.expanded .sage-chat-label {\n            opacity: 1;\n        }\n\n        .sage-chat-window {\n            position: fixed;\n            bottom: 80px;\n            right: 20px;\n            width: 400px;\n            background-color: #fff;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n            overflow: hidden;\n        }\n\n        .sage-chat-header {\n            background-color: #f1f1f1;\n            padding: 10px;\n            display: flex;\n            justify-content: flex-end;\n        }\n\n        .sage-chat-close {\n            border: none;\n            background: none;\n            font-size: 18px;\n            cursor: pointer;\n        }\n\n        .sage-chat-messages {\n            max-height: 600px;\n            overflow-y: auto;\n            padding: 10px;\n        }\n\n        .sage-message {\n            display: flex;\n            align-items: flex-start;\n            margin-bottom: 10px;\n        }\n\n        .sage-avatar {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            margin-right: 10px;\n        }\n\n        .sage-message-content {\n            background-color: #f1f1f1;\n            border-radius: 10px;\n            padding: 10px;\n            max-width: 70%;\n        }\n\n        .sage-chat-input {\n            display: flex;\n            align-items: center;\n            padding: 10px;\n            background-color: #fff;\n            border-top: 1px solid #e1e1e1;\n        }\n\n        .sage-message-input {\n            flex: 1;\n            border: 1px solid #e1e1e1;\n            border-radius: 20px;\n            padding: 10px;\n            margin-right: 10px;\n        }\n\n        .sage-send-button {\n            background: none;\n            border: none;\n            cursor: pointer;\n        }\n\n        .sage-send-icon {\n          width: 20px;\n          height: 20px;\n        }\n        \n        .sage-chat-context {\n            display: flex;\n            align-items: center;\n            padding: 10px;\n            background-color: #f1f1f1;\n            border-bottom: 1px solid #e1e1e1;\n            font-size: 14px;\n        }\n        \n        .sage-context-text {\n            flex: 1;\n            margin-left: 5px;\n            color: #333;\n        }\n        \n        .sage-clear-context {\n            background: none;\n            border: none;\n            cursor: pointer;\n            font-size: 16px;\n            color: #666;\n            margin-left: 10px;\n        }\n        \n        .sage-clear-context:hover {\n            color: #000;\n        }\n        `)\n        .appendTo('head');\n\n     /**\n     * Creates the chat button that appears on the webpage.  This button, when clicked, toggles the chat window's visibility.\n     * @function\n     */\n     function createButton() {\n        $('body').append(`\n            <div class=\"sage-chat-button\">\n                <img src=${sageIcon} alt=\"Chat Icon\" class=\"sage-chat-icon\">\n                <span class=\"sage-chat-label\">Посоветоваться с Мудрецом</span>\n            </div>\n        `);\n\n        $(sageChatButtonSelector).hide().fadeIn();\n\n        $(sageChatButtonSelector).on('mouseenter', function () {\n            if (!window.getSelection().toString()) {\n                $(this).addClass('expanded');\n            }\n        }).on('mouseleave', function () {\n            if (!window.getSelection().toString()) {\n                $(this).removeClass('expanded');\n            }\n        });\n\n        $(sageChatButtonSelector).on('click', function () {\n            const selectedText = window.getSelection().toString();\n            if (selectedText) {\n                selection_api.setCurrentSelection(selectedText);\n                chat_api.setChatState(true);\n            } else {\n                chat_api.setChatState(true);\n            }\n        });\n\n        document.addEventListener('selectionchange', function () {\n            const selectedText = window.getSelection().toString();\n            const $button = $(sageChatButtonSelector);\n            const $label = $(sageChatLabelSelector);\n\n            if (selectedText) {\n                $label.text('Пояснить');\n                $button.addClass('expanded');\n            } else {\n                $label.text('Посоветоваться с Мудрецом');\n                $button.removeClass('expanded');\n            }\n        });\n    }\n\n    /**\n     * Creates the chat window which includes the header, message area, input field, and send button.\n     * @function\n     */\n    function createChat() {\n        $('body').append(`\n            <div class=\"sage-chat-window\" style=\"display:none;\">\n                <div class=\"sage-chat-header\">\n                    <button class=\"sage-chat-close\">></button>\n                </div>\n                <div class=\"sage-chat-messages\"></div>\n                <div class=\"sage-chat-context\" style=\"display: none;\">\n                    <span>Контекст: </span>\n                    <span class=\"sage-context-text\"></span>\n                    <button class=\"sage-clear-context\">×</button>\n                </div>\n                <div class=\"sage-chat-input\">\n                    <input type=\"text\" placeholder=\"Введите Ваш вопрос\" class=\"sage-message-input\">\n                    <button class=\"sage-send-button\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" \n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"stroke-[1.5]\"\n                        id=\"#sendbutton\"><path d=\"M10 14l11 -11\"></path><path d=\"M21 3l-6.5 18a.55 .55 0 0 1 -1 0l-3.5 -7l-7 \n                        -3.5a.55 .55 0 0 1 0 -1l18 -6.5\"></path></svg>\n                    </button>\n                </div>\n            </div>\n        `);\n\n        $('.sage-chat-close').on('click', function () {\n            chat_api.setChatState(false);\n        });\n\n        $('.sage-send-button').on('click', function () {\n            sendMessage();\n        });\n\n        $('.sage-message-input').on('keypress', function (e) {\n            if (e.which === 13) {\n                sendMessage();\n            }\n        });\n\n        $('.sage-clear-context').on('click', function () {\n            selection_api.resetSelection();\n        });\n    }\n\n    /**\n     * Updates the UI to reflect the current context (selected text), showing or hiding the context display as needed.\n     * @returns {void}\n     */\n    function updateContextUI() {\n        const contextElement = $('.sage-chat-context');\n        const contextTextElement = $('.sage-context-text');\n        if (selection_api.getCurrentSelection()) {\n            contextTextElement.text(selection_api.getCurrentSelection());\n            contextElement.show();\n        } else {\n            contextElement.hide();\n        }\n    }\n\n\n    /**\n     * Scrolls the chat message container to the bottom, ensuring the latest message is visible.\n     * @returns {void}\n     */\n    function scrollToBottom() {\n        const $messagesContainer = $('.sage-chat-messages');\n        $messagesContainer.scrollTop($messagesContainer[0].scrollHeight);\n    }\n\n    /**\n     * Toggles the visibility of the chat window based on the chat state.\n     * @returns {void}\n     */\n    function toggleChat() {\n        if (chat_api.isChatOpen()) {\n            $(sageChatWindowSelector).slideDown();\n            $(sageChatButtonSelector).fadeOut();\n            renderChat();\n        } else {\n            $(sageChatWindowSelector).slideUp();\n            $(sageChatButtonSelector).fadeIn();\n        }\n    }\n\n    /**\n     * Renders the chat messages in the chat window, clearing existing messages and adding each message from the chat history.\n     * @returns {void}\n     */\n    function renderChat() {\n        $('.sage-chat-messages').empty();\n        const messages = chat_api.getChatMessages();\n        for (let i = 0; i < messages.length; i++) {\n            const message = messages[i];\n            addMessageToChat(message.role, message.message);\n        }\n        scrollToBottom();\n    }\n\n    /**\n     * Adds a single message to the chat display.\n     * @function\n     * @param {\"SAGE\"|\"USER\"} type - The message sender (\"SAGE\" for the AI, \"USER\" for the user).\n     * @param {string} messageText - The text content of the message.\n     * @returns {void}\n     */\n    function addMessageToChat(type, messageText) {\n        $('.sage-chat-messages').append(`\n            <div class=\"sage-message\">\n                <img src=${type === \"SAGE\" ? sageIcon : \"https://avatars.mds.yandex.net/get-yapic/0/0-0/islands-retina-middle\"}\n                  alt=\"Avatar\" class=\"sage-avatar\">\n                <div class=\"sage-message-content\">\n                    <strong>${type === \"SAGE\" ? \"Мудрец\" : \"Вы\"}</strong>\n                    ${messageText}\n                </div>\n            </div>\n        `);\n    }\n\n    /**\n     * Sends the user's message from the input field, clears the input, and processes the message through the chat API.\n     * @returns {void}\n     */\n    function sendMessage() {\n        const messageText = $(sageMessageInputSelector).val();\n        if (messageText.trim()) {\n            chat_api.processNewChatMessage(messageText);\n        }\n        $(sageMessageInputSelector)[0].value=\"\";\n    }\n\n    return {\n        init: function () {\n            sageIcon = M.cfg.wwwroot + \"/blocks/sage/pix/icon.png\";\n            createButton();\n            createChat();\n            chat_api.registerChatStateListener(toggleChat);\n            chat_api.registerChatMessageListener(renderChat);\n            selection_api.registerSelectionChangeListener(updateContextUI);\n        }\n    };\n});"],"names":["define","$","chat_api","selection_api","sageIcon","updateContextUI","contextElement","contextTextElement","getCurrentSelection","text","show","hide","toggleChat","isChatOpen","slideDown","fadeOut","renderChat","slideUp","fadeIn","empty","messages","getChatMessages","i","length","message","type","role","messageText","append","$messagesContainer","scrollTop","scrollHeight","scrollToBottom","sendMessage","val","trim","processNewChatMessage","value","html","appendTo","init","M","cfg","wwwroot","on","window","getSelection","toString","this","addClass","removeClass","selectedText","setCurrentSelection","setChatState","document","addEventListener","$button","$label","e","which","resetSelection","registerChatStateListener","registerChatMessageListener","registerSelectionChangeListener"],"mappings":";;;;;;;;AAuBAA,gCAAO,CAAC,SAAU,0BAA2B,iCACzC,SAAUC,EAAGC,SAAUC,mBAMnBC,SAAW,cA+PNC,wBACCC,eAAiBL,EAAE,sBACnBM,mBAAqBN,EAAE,sBACzBE,cAAcK,uBACdD,mBAAmBE,KAAKN,cAAcK,uBACtCF,eAAeI,QAEfJ,eAAeK,gBAkBdC,aACDV,SAASW,cACTZ,EA7RuB,qBA6RGa,YAC1Bb,EA/RuB,qBA+RGc,UAC1BC,eAEAf,EAjSuB,qBAiSGgB,UAC1BhB,EAnSuB,qBAmSGiB,mBAQzBF,aACLf,EAAE,uBAAuBkB,cACnBC,SAAWlB,SAASmB,sBACrB,IAAIC,EAAI,EAAGA,EAAIF,SAASG,OAAQD,IAAK,OAChCE,QAAUJ,SAASE,GAaPG,KAZDD,QAAQE,KAYDC,YAZOH,QAAQA,QAa3CvB,EAAE,uBAAuB2B,oFAEG,SAATH,KAAkBrB,SAAW,yNAGjB,SAATqB,KAAkB,SAAW,+CACrCE,2EAPQF,KAAME,8BAxCtBE,mBAAqB5B,EAAE,uBAC7B4B,mBAAmBC,UAAUD,mBAAmB,GAAGE,cA6BnDC,YA2BKC,oBACCN,YAAc1B,EA5US,uBA4UmBiC,MAC5CP,YAAYQ,QACZjC,SAASkC,sBAAsBT,aAEnC1B,EAhV6B,uBAgVD,GAAGoC,MAAM,UA5UzCpC,EAAE,2BACGqC,ikHAsJAC,SAAS,QAwLP,CACHC,KAAM,WACFpC,SAAWqC,EAAEC,IAAIC,QAAU,4BAnL/B1C,EAAE,QAAQ2B,wFAESxB,oKAKnBH,EA3K2B,qBA2KDU,OAAOO,SAEjCjB,EA7K2B,qBA6KD2C,GAAG,cAAc,WAClCC,OAAOC,eAAeC,YACvB9C,EAAE+C,MAAMC,SAAS,eAEtBL,GAAG,cAAc,WACXC,OAAOC,eAAeC,YACvB9C,EAAE+C,MAAME,YAAY,eAI5BjD,EAvL2B,qBAuLD2C,GAAG,SAAS,iBAC5BO,aAAeN,OAAOC,eAAeC,WACvCI,cACAhD,cAAciD,oBAAoBD,cAClCjD,SAASmD,cAAa,IAEtBnD,SAASmD,cAAa,MAI9BC,SAASC,iBAAiB,mBAAmB,iBACnCJ,aAAeN,OAAOC,eAAeC,WACrCS,QAAUvD,EAnMO,qBAoMjBwD,OAASxD,EAjMO,oBAmMlBkD,cACAM,OAAOhD,KAAK,YACZ+C,QAAQP,SAAS,cAEjBQ,OAAOhD,KAAK,6BACZ+C,QAAQN,YAAY,gBAU5BjD,EAAE,QAAQ2B,8vCAuBV3B,EAAE,oBAAoB2C,GAAG,SAAS,WAC9B1C,SAASmD,cAAa,MAG1BpD,EAAE,qBAAqB2C,GAAG,SAAS,WAC/BX,iBAGJhC,EAAE,uBAAuB2C,GAAG,YAAY,SAAUc,GAC9B,KAAZA,EAAEC,OACF1B,iBAIRhC,EAAE,uBAAuB2C,GAAG,SAAS,WACjCzC,cAAcyD,oBA+Fd1D,SAAS2D,0BAA0BjD,YACnCV,SAAS4D,4BAA4B9C,YACrCb,cAAc4D,gCAAgC1D"}