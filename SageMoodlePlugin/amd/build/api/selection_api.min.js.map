{"version":3,"file":"selection_api.min.js","sources":["../../src/api/selection_api.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manages the currently selected text within the page, allowing other modules to access and respond to selection changes.\n *\n * @module     block_sage/api/selection_api\n * @copyright  2024 Vasilevskiy Vladimir <vivasilevskiy_1@edu.hse.ru>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(function() {\n    let curSelection = \"\";\n\n    let selectionChangeListeners = [];\n\n    /**\n     * Gets the currently selected text.\n     *\n     * @returns {string} The currently selected text.\n     */\n    function getCurrentSelection(){\n        return curSelection;\n    }\n\n    /**\n     * Sets the currently selected text and notifies all registered listeners.\n     *\n     * @param {string} selection The new text selection.\n     * @returns {void}\n     */\n    function setCurrentSelection(selection){\n        curSelection = selection;\n        selectionChangeListeners.forEach((listener) => listener());\n    }\n\n    /**\n     * Resets the current selection to an empty string and notifies listeners.\n     * @returns {void}\n     */\n    function resetSelection(){\n        setCurrentSelection(\"\");\n    }\n\n    /**\n     * Registers a listener function to be called when the selected text changes.\n     *\n     * @param {function} listener The listener function to register.\n     * @returns {void}\n     */\n    function registerSelectionChangeListener(listener) {\n        selectionChangeListeners.push(listener);\n    }\n\n    return {\n        getCurrentSelection: getCurrentSelection,\n\n        setCurrentSelection: setCurrentSelection,\n\n        resetSelection: resetSelection,\n\n        registerSelectionChangeListener: registerSelectionChangeListener\n    };\n});"],"names":["define","curSelection","selectionChangeListeners","setCurrentSelection","selection","forEach","listener","getCurrentSelection","resetSelection","registerSelectionChangeListener","push"],"mappings":";;;;;;;AAsBAA,uCAAO,eACCC,aAAe,GAEfC,yBAA2B,YAiBtBC,oBAAoBC,WACzBH,aAAeG,UACfF,yBAAyBG,SAASC,UAAaA,mBAqB5C,CACHC,sCAjCON,cAmCPE,oBAAqBA,oBAErBK,0BAlBAL,oBAAoB,KAoBpBM,yCAXqCH,UACrCJ,yBAAyBQ,KAAKJ"}